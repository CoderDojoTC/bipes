{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BIPES Block Programming with MicroPython BIPES Block Programming with MicroPython Block-based Integrated Platform for Embedded Systems (BIPES), an open source project developed in partnership with a range of universities to develop a drag-and-drop visual programming environment for the embedded world, has support for the Raspberry Pi Pico and its RP2040 microcontroller. BIPES has been extended to add support for the Raspberry Pi Pico W as well as the Maker Pi RP2040 based Optum Bot. Read more about the history of BIPES here","title":"BIPES Home"},{"location":"#bipes-block-programming-with-micropython","text":"BIPES Block Programming with MicroPython Block-based Integrated Platform for Embedded Systems (BIPES), an open source project developed in partnership with a range of universities to develop a drag-and-drop visual programming environment for the embedded world, has support for the Raspberry Pi Pico and its RP2040 microcontroller. BIPES has been extended to add support for the Raspberry Pi Pico W as well as the Maker Pi RP2040 based Optum Bot. Read more about the history of BIPES here","title":"BIPES Block Programming with MicroPython"},{"location":"contacts/","text":"BIPES Contacts Jim Tannenbaum (aka \"JET\") Dan McCreary","title":"Contacts"},{"location":"contacts/#bipes-contacts","text":"Jim Tannenbaum (aka \"JET\") Dan McCreary","title":"BIPES Contacts"},{"location":"contributing/","text":"Contributing We welcome anyone that has sample lesson plans they would like to contribute. You can use the following ways to contribute: Submit a pull request Add an issue to our issue tracker Send one of us your sample lesson plans or code via e-mail. You can see our contacts on the Contacts page. Authoring Guidelines This site is built using Markdown, GitHub Pages and mkdocs using the mkdocs-material theme. See our authoring guidelines for further details: Content Authoring Guide","title":"Contributing"},{"location":"contributing/#contributing","text":"We welcome anyone that has sample lesson plans they would like to contribute. You can use the following ways to contribute: Submit a pull request Add an issue to our issue tracker Send one of us your sample lesson plans or code via e-mail. You can see our contacts on the Contacts page.","title":"Contributing"},{"location":"contributing/#authoring-guidelines","text":"This site is built using Markdown, GitHub Pages and mkdocs using the mkdocs-material theme. See our authoring guidelines for further details: Content Authoring Guide","title":"Authoring Guidelines"},{"location":"glossary/","text":"BIPES Glossary Here is a glossary of terms we use in these courses. BIPES Block-based Integrated Platform for Embedded Systems See https://bipes.net.br/wp/ Raspberry Pi Pico A low-cost $4 microcontroller that you can program with BIPES.","title":"Glossary"},{"location":"glossary/#bipes-glossary","text":"Here is a glossary of terms we use in these courses.","title":"BIPES Glossary"},{"location":"glossary/#bipes","text":"Block-based Integrated Platform for Embedded Systems See https://bipes.net.br/wp/","title":"BIPES"},{"location":"glossary/#raspberry-pi-pico","text":"A low-cost $4 microcontroller that you can program with BIPES.","title":"Raspberry Pi Pico"},{"location":"references/","text":"BIPES References https://bipes.net.br/wp/","title":"References"},{"location":"references/#bipes-references","text":"https://bipes.net.br/wp/","title":"BIPES References"},{"location":"basics/01-intro/","text":"Getting Started with BIPES","title":"Introduction"},{"location":"basics/01-intro/#getting-started-with-bipes","text":"","title":"Getting Started with BIPES"},{"location":"basics/02-lab/","text":"BIPES Lab 2","title":"Lab 2"},{"location":"basics/02-lab/#bipes-lab-2","text":"","title":"BIPES Lab 2"},{"location":"basics/03-lab/","text":"Lab 3","title":"Lab 3"},{"location":"basics/03-lab/#lab-3","text":"","title":"Lab 3"},{"location":"intro/01-intro/","text":"An introduction to BIPES What is BIPES BIPES (Block based Integrated Platform for Embedded Systems) allows text and block based programming for several types of embedded systems and Internet of Things modules using MicroPython. You can connect, program, debug and monitor several types of boards using a serial USB connection. Why BIPES is Fun BIPES hides the complexity of MicroPython by allowing users to program microcontrollers via an easy to use graphical interface. BIPES has several built in libraries that make adding accessories to your microcontroller simple. The underlying code can be viewed in the console, giving the interested user the ability to learn as they build on coding concepts. About this site This site provides a rich collection of resources to teach computational thinking to students from 10 to 16 years old using fun programs that control the physical world around us. The sub-field of computer science that reads sensors and controls lights and motors is called Physical Computing. You can read about physical computing on our MicroPython site. Want to learn more? This site will concentrate on using BIPES to program the Raspberry Pi Pico and the Cytron Maker Pi 2040 boards. The lessons are based, in part, on the MicroPython lessons covered in our MicroPython for Kids site. A discussion of how a breadboard works , different types of microcontrollers , and the Raspberry Pi Pico are all covered on that site.","title":"About BIPES"},{"location":"intro/01-intro/#an-introduction-to-bipes","text":"","title":"An introduction to BIPES"},{"location":"intro/01-intro/#what-is-bipes","text":"BIPES (Block based Integrated Platform for Embedded Systems) allows text and block based programming for several types of embedded systems and Internet of Things modules using MicroPython. You can connect, program, debug and monitor several types of boards using a serial USB connection.","title":"What is BIPES"},{"location":"intro/01-intro/#why-bipes-is-fun","text":"BIPES hides the complexity of MicroPython by allowing users to program microcontrollers via an easy to use graphical interface. BIPES has several built in libraries that make adding accessories to your microcontroller simple. The underlying code can be viewed in the console, giving the interested user the ability to learn as they build on coding concepts.","title":"Why BIPES is Fun"},{"location":"intro/01-intro/#about-this-site","text":"This site provides a rich collection of resources to teach computational thinking to students from 10 to 16 years old using fun programs that control the physical world around us. The sub-field of computer science that reads sensors and controls lights and motors is called Physical Computing. You can read about physical computing on our MicroPython site.","title":"About this site"},{"location":"intro/01-intro/#want-to-learn-more","text":"This site will concentrate on using BIPES to program the Raspberry Pi Pico and the Cytron Maker Pi 2040 boards. The lessons are based, in part, on the MicroPython lessons covered in our MicroPython for Kids site. A discussion of how a breadboard works , different types of microcontrollers , and the Raspberry Pi Pico are all covered on that site.","title":"Want to learn more?"},{"location":"intro/02-getting-started/","text":"Getting Started Before getting started with BIPES, follow the directions below to setup your microcontroller. Setup However, before getting started with BIPES, your microcontroller board must be setup. Regardless of which board you are using, you should start by doing the following steps: Download the flash_nuke.utf file to your computer. Download the latest MicroPython utf file to your computer. Hold down the BOOTSEL button on the Pico or the BOOT button on the Maker Pi then connect your microcontroller board to your computer with a micro usb cable and it will appear as a drive onto which you can drag the flash_nuke.uf2 file If you don't see the Maker Pi board, make sure the on/off switch is in the on position before connecting to your computer. Once the drive reappears, copy the MicroPython utf file to your device. If you are having trouble, take a look at the Drag-and-Drop MicroPython page Working with BIPES Working with BIPES is easy, since there is nothing to load on your computer. BIPES can be found online . Once the Welcome screen loads in your browser, you can do the following: Close the Welcome screen Select your board: The Raspberry Pi Pico The Maker Pi RP2040 Connect to your board Serial connection Select the comm port for your board Congratulations! You are ready to start using BIPES.","title":"Getting Started"},{"location":"intro/02-getting-started/#getting-started","text":"Before getting started with BIPES, follow the directions below to setup your microcontroller.","title":"Getting Started"},{"location":"intro/02-getting-started/#setup","text":"However, before getting started with BIPES, your microcontroller board must be setup. Regardless of which board you are using, you should start by doing the following steps: Download the flash_nuke.utf file to your computer. Download the latest MicroPython utf file to your computer. Hold down the BOOTSEL button on the Pico or the BOOT button on the Maker Pi then connect your microcontroller board to your computer with a micro usb cable and it will appear as a drive onto which you can drag the flash_nuke.uf2 file If you don't see the Maker Pi board, make sure the on/off switch is in the on position before connecting to your computer. Once the drive reappears, copy the MicroPython utf file to your device. If you are having trouble, take a look at the Drag-and-Drop MicroPython page","title":"Setup"},{"location":"intro/02-getting-started/#working-with-bipes","text":"Working with BIPES is easy, since there is nothing to load on your computer. BIPES can be found online . Once the Welcome screen loads in your browser, you can do the following: Close the Welcome screen Select your board: The Raspberry Pi Pico The Maker Pi RP2040 Connect to your board Serial connection Select the comm port for your board Congratulations! You are ready to start using BIPES.","title":"Working with BIPES"},{"location":"motors/01-intro/","text":"Motors Labs Put the robot on the floor for these labs.","title":"Introduction"},{"location":"motors/01-intro/#motors-labs","text":"Put the robot on the floor for these labs.","title":"Motors Labs"},{"location":"sensors/01-intro/","text":"Sensors Ultrasonic Distance Ping Sensor","title":"Introduction"},{"location":"sensors/01-intro/#sensors","text":"","title":"Sensors"},{"location":"sensors/01-intro/#ultrasonic-distance-ping-sensor","text":"","title":"Ultrasonic Distance Ping Sensor"}]}